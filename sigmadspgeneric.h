#ifndef SIGMADSP_GENERIC_H
#define SIGMADSP_GENERIC_H
// put the path of the PARAM.h file generated by sigma studio
#include "sigmadsp_IC_1_PARAM.h" 
#if defined( MOD_BOARD1_GAIN_IN_COUNT ) && defined( MOD_BOARD1_GAIN_OUT_COUNT )

// adjust this line according to the DELAY_OUT capabilities defined in the generic file
#define DSP_DELAY_OUT_SAMPLES(x)   (((x) == 1)? (6000) : (600) ) // 6000 samples for the channel supporting subwoofer
// adjust this line according to the DELAY_SUB capabilities defined in the generic file
#define DSP_DELAY_SUB_SAMPLES(x)   (1500) // default value

// adress of GAIN for N inputs channels
#define DSP_GAIN_IN_ADDR      (MOD_BOARD1_GAIN_IN_ALG0_GAIN0_ADDR)
#define DSP_GAIN_IN_COUNT     (MOD_BOARD1_GAIN_IN_COUNT)
// adress of GAIN for M outputs channesl
#define DSP_GAIN_OUT_ADDR     (MOD_BOARD1_GAIN_OUT_ALG0_GAIN0_ADDR)
#define DSP_GAIN_OUT_COUNT    (MOD_BOARD1_GAIN_OUT_COUNT)

// number of inputs and outputs are considered based on the GAIN_IN and GAIN_OUT algorythm presence
#define DSP_INPUTS           (DSP_GAIN_IN_COUNT)
#define DSP_OUTPUTS          (DSP_GAIN_OUT_COUNT)
// total number of inputs and outputs N+M
#define DSP_IO_TOTAL (DSP_INPUTS + DSP_OUTPUTS)

// address of input mixer expected to have same number of N inputs than outputs
#define DSP_MIXER_IN_ADDR     (MOD_BOARD1_MIXER_IN_ALG0_NXNMIXALG2VOL0000_ADDR)
// adress of mixer in front ou outputs filterbanks, expected to have N inputs and M outputs
#define DSP_MIXER_OUT_ADDR    (MOD_BOARD1_MIXER_OUT_ALG0_NXNMIXALG1VOL0000_ADDR)
#define DSP_MIXER_OUT_COUNT   (MOD_BOARD1_MIXER_OUT_COUNT)
// adress of DELAY for outputs channels (no inputs here) expected to be sized for M outputs
#define DSP_DELAY_OUT_ADDR    (MOD_BOARD1_DELAY_OUT_ALG1_DELAYAMT_ADDR)

//for substractive filters option expected to be sized for M outputs
#ifdef MOD_BOARD1_DELAY_SUB_ALG0_DELAYAMT_ADDR
//for substractive filters option expected to be sized for M outputs
#define DSP_DELAY_SUB_ADDR    (MOD_BOARD1_DELAY_SUB_ALG0_DELAYAMT_ADDR)
#if (DSP_MIXER_OUT_COUNT != (DSP_OUTPUTS * DSP_IO_TOTAL))
#error in generic sigmastudio file for substractive delay handling, mixer_out should be sized to handle input+outputs->outputs
#endif
#endif
//////////////////////////////////////////////////////////////////////////////////////////
// now indentify the larger filterbanks by srutenizing the FILTERx algorythms
#ifdef  MOD_BOARD1_FILTER1_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER1_COUNT
#else
#define FILTERS_COUNT 0
#endif
#ifdef  MOD_BOARD1_FILTER2_COUNT
#if     MOD_BOARD1_FILTER2_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER2_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER3_COUNT
#if     MOD_BOARD1_FILTER3_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER3_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER4_COUNT
#if     MOD_BOARD1_FILTER4_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER4_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER5_COUNT
#if     MOD_BOARD1_FILTER5_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER5_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER6_COUNT
#if     MOD_BOARD1_FILTER6_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER6_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER7_COUNT
#if     MOD_BOARD1_FILTER7_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER7_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER8_COUNT
#if     MOD_BOARD1_FILTER8_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER8_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER9_COUNT
#if     MOD_BOARD1_FILTER9_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER9_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER10_COUNT
#if     MOD_BOARD1_FILTER10_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER10_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER11_COUNT
#if     MOD_BOARD1_FILTER11_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER11_COUNT
#endif
#ifdef  MOD_BOARD1_FILTER12_COUNT
#endif
#if     MOD_BOARD1_FILTER12_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER12_COUNT
#endif
#ifdef  MOD_BOARD1_FILTER13_COUNT
#endif
#if     MOD_BOARD1_FILTER13_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER13_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER14_COUNT
#if     MOD_BOARD1_FILTER14_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER14_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER15_COUNT
#if     MOD_BOARD1_FILTER15_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER15_COUNT
#endif
#endif
#ifdef  MOD_BOARD1_FILTER16_COUNT
#if     MOD_BOARD1_FILTER16_COUNT > FILTERS_COUNT
#undef  FILTERS_COUNT
#define FILTERS_COUNT MOD_BOARD1_FILTER16_COUNT
#endif
#endif

#if (FILTERS_COUNT > 0)
#define DSP_GENERIC_OK

// this define the maximum number of successive biquad seen in the generic sigmastudio file, to scale de preset to the maximum ones
#define FILTER_BANK_SIZE (FILTERS_COUNT / 5)

extern const long mixerInAddr;   //address within sigmadsp parameter for MIXER_IN
extern const long mixerOutAddr;
extern const long gainInAddr;
extern const long gainOutAddr;
extern const long delayOutAddr;
extern const long delaySubAddr;

extern const long filterBankAddr[16];    //address within sigmadsp parameter for FILTERx
extern const long filterBankSize[16];    //size of each FILTERx

extern const long filterHPAddr[16];      // these filters are sized 4 biquads by design
extern const long filterLPAddr[16];      // same
#endif
#endif 
#endif
